#  ██████████ ████     ████ ██     ██ ██     ██
# ░░░░░██░░░ ░██░██   ██░██░██    ░██░░██   ██
#     ░██    ░██░░██ ██ ░██░██    ░██ ░░██ ██
#     ░██    ░██ ░░███  ░██░██    ░██  ░░███
#     ░██    ░██  ░░█   ░██░██    ░██   ██░██
#     ░██    ░██   ░    ░██░██    ░██  ██ ░░██
#     ░██    ░██        ░██░░███████  ██   ░░██
#     ░░     ░░         ░░  ░░░░░░░  ░░     ░░
#
#  ▓▓▓▓▓▓▓▓▓▓
# ░▓ Author ▓ AK <abdullah@abdullah.today>
# ░▓▓▓▓▓▓▓▓▓▓
# ░░░░░░░░░░

# my tmux

# source powerline 
# source /usr/lib/python3.8/site-packages/powerline/bindings/tmux/powerline.conf

source .tmux-key.conf

# ┌────────┐
# │ option │
# └────────┘

# 支持 utf-8
#set -g status-utf8 on

# vim
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection

unbind -T copy-mode-vi MouseDragEnd1Pane


# Shell
set -g default-command $SHELL
set -g default-shell $SHELL
# Panes numbers
set -g display-panes-active-colour colour20
set -g display-panes-colour colour196


# Enable mouse mode
set -g mouse on

set -g base-index 1

set -qg mode-mouse on
set -qg mouse-select-pane on
set -qg mouse-resize-pane on
set -qg mouse-select-window on

set -q -g status-utf8 on
setw -q -g utf8 on

set -qg mouse on

# Default terminal mode
# set -g default-terminal 'xterm-256color'
# set -sa terminal-overrides ',xterm-256color:RGB'
#set -g default-terminal "screen-256color"
# set -g default-terminal "tmux-256color"
# set -ag terminal-overrides ",xterm-256color:RGB"

set -ga terminal-overrides ",*256col*:Tc"  # 修复 wezterm 无法显示 truecolor


#bind -n S-left previous-window
#bind -n S-right next-window


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


# ┌───────┐
# │ Style │
# └───────┘


set -g status-left-length 40
# set -g status-left ' '
set -g status-right ''
# set -g status-left "#[fg=colour233,bg=colour12,bold] #h: #S #[fg=colour233,bg=yellow,bold] #I #[fg=colour233,bg=cyan,bold] #P "
set -g status-left "#[fg=colour233,bg=colour12,bold] %m/%d | #[fg=colour233,bg=bg=cyan,bold] %H:%M "



set-option -g status-position bottom

setw -g window-status-current-format '#[underscore,bold]#I #W'
setw -g window-status-format '#I #W'
set -g status-justify centre  # 


# ┌────────┐
# │ plugin │
# └────────┘
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'jimeh/tmux-themepack'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @themepack 'powerline/default/cyan'

set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'



run '~/.tmux/plugins/tpm/tpm'


